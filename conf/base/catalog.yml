# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://docs.kedro.org/en/stable/data/data_catalog.html
#
# We support interacting with a variety of data stores including local file systems, cloud, network and HDFS
#
# An example data set definition can look as follows:
#
#bikes:
#  type: pandas.CSVDataset
#  filepath: "data/01_raw/bikes.csv"
#
#weather:
#  type: spark.SparkDataset
#  filepath: s3a://your_bucket/data/01_raw/weather*
#  file_format: csv
#  credentials: dev_s3
#  load_args:
#    header: True
#    inferSchema: True
#  save_args:
#    sep: '|'
#    header: True
#
#scooters:
#  type: pandas.SQLTableDataset
#  credentials: scooters_credentials
#  table_name: scooters
#  load_args:
#    index_col: ['name']
#    columns: ['name', 'gear']
#  save_args:
#    if_exists: 'replace'
#    # if_exists: 'fail'
#    # if_exists: 'append'
#
# The Data Catalog supports being able to reference the same file using two different Dataset implementations
# (transcoding), templating and a way to reuse arguments that are frequently repeated. See more here:
# https://docs.kedro.org/en/stable/data/data_catalog.html

# Removed companies dataset definition
# companies:
#   filepath: data/01_raw/companies.csv
#   type: pandas.CSVDataset # Changed to pandas
#   load_args:
#     header: 0 # pandas uses 0-based header index
#     # inferSchema: True # Removed invalid argument for pandas.CSVDataset
#   save_args:
#     sep: ','
#     header: True
#     mode: 'w' # pandas uses 'w' for overwrite

# Removed reviews dataset definition
# reviews:
#   filepath: data/01_raw/reviews.csv
#   type: pandas.CSVDataset # Changed to pandas
#   load_args:
#     header: 0
#   save_args:
#     sep: ','
#     header: True
#     mode: 'w'

dataset_dev:
  type: pandas.ParquetDataset 
  filepath: data/01_raw/dataset_kobe_dev.parquet 

dataset_prod:
  type: pandas.ParquetDataset 
  filepath: data/01_raw/dataset_kobe_prod.parquet 


shuttles_excel:
  type: pandas.ExcelDataset
  filepath: data/01_raw/shuttles.xlsx

data_filtered:
  filepath: data/processed/data_filtered.parquet
  type: pandas.ParquetDataset

base_train:
  filepath: data/processed/base_train.parquet
  type: pandas.ParquetDataset 

base_test:
  filepath: data/processed/base_test.parquet
  type: pandas.ParquetDataset 



model_input_table: 
  type: pandas.ParquetDataset
  filepath: data/03_primary/model_input_table.parquet

preprocessed_prod_data: 
  type: pandas.ParquetDataset
  filepath: data/04_feature/preprocessed_prod_data.parquet 

production_predictions:
  type: pandas.ParquetDataset 
  filepath: data/07_model_output/production_predictions.parquet


regressor:
  type: pickle.PickleDataset
  filepath: data/06_models/regressor.pickle
  versioned: true

lr_model:
  type: pickle.PickleDataset
  filepath: data/06_models/lr_model.pkl

  versioned: true

dt_model:
  type: pickle.PickleDataset
  filepath: data/06_models/dt_model.pkl
  versioned: true

final_model:
  type: pickle.PickleDataset
  filepath: data/07_model_output/final_model.pkl
  versioned: true

model_justification:
  type: pandas.CSVDataset
  filepath: data/07_model_output/model_selection_justification.csv 
  versioned: true

shuttle_passenger_capacity_plot_exp:
  type: plotly.PlotlyDataset
  filepath: data/08_reporting/shuttle_passenger_capacity_plot_exp.json
  versioned: true
  plotly_args:
    type: bar
    fig:
      x: shuttle_type
      y: passenger_capacity
      orientation: h
    layout:
      xaxis_title: Shuttles
      yaxis_title: Average passenger capacity
      title: Shuttle Passenger capacity

shuttle_passenger_capacity_plot_go:
  type: plotly.JSONDataset
  filepath: data/08_reporting/shuttle_passenger_capacity_plot_go.json
  versioned: true

dummy_confusion_matrix:
  type: matplotlib.MatplotlibWriter
  filepath: data/08_reporting/dummy_confusion_matrix.png
  versioned: true

# Datasets intermediários para métricas (não precisam ser salvos em disco)
lr_f1_metric:
  type: kedro.io.MemoryDataset

lr_logloss_metric:
  type: kedro.io.MemoryDataset

dt_f1_metric:
  type: kedro.io.MemoryDataset

dt_logloss_metric:
  type: kedro.io.MemoryDataset

# Dataset para salvar o gráfico de comparação de métricas
model_comparison_metrics_plot:
  type: matplotlib.MatplotlibWriter
  filepath: data/08_reporting/model_comparison_metrics.png # Salva na pasta 08_reporting
  versioned: true
